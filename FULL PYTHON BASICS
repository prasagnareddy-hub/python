HI HELLO THERE! THANKS FOR CHOOSING THIS HUB AND I WHOLE HEARTLY WELCOME YOU (NEW BEGINNER) TO THIS TECHIE HUB.


#PYTHON SYNTAX:
print("welcome") #this is the final printing statement. no matter whatever you write final have to be excuted using this print statement.
if 5>2: # condition end with colon, in java almost each statement ends with semicolon don't be confused.
    print("yes it is")# wonder why is there a gap before??
    #that's because python uses indentation rather then flower brackets{} to indicate a block of code.AS indentation is used here the print statement comes under the condition.
else:
    print("nope")#if the if statement isn't true python excutes the else statement.Remeber always end conditions with colon or else python gives error.


#EXCERCISE:
#WHAT IS PYTHON INDENTATION?
#PYTHON INDENTATION REFERS TO THE SPACES OR GAP AT THE BEGINNING OF A CODE.REMEMBER WITHOUT INDENTATION PYTHON GIVES ERROR. IT IS USED TO INDICATE A BLOCK OF CODE, IF THERE ARE MANY STATEMENTS UNDER THE SAME BLOCK THEN SAME NO.OF SPACES HAVE TO BE THERE AT THE BEGINNING OF EACH LINE.
#EXAMPLES:
if 6%2==0:
    print("It is factor of 6")
elif 6%2>0:
    print("It is not a factor")
else:
    print("not a number")
       #you can change the condition if according to your wish to execute a want statement. for suppose if u want else statement to be printed change this 6%2 anything that doesn't involve number.   


PYTHON COMMENTS AND VARIABLES:
#python comments: 
print(" comments")#python ignore the statement as soon as it see #, and also string literals for multiline comments.
print("""I am sama Prasagna Reddy""")
"""string literals are not considered by the python if they are undefined, only the print statements will be printed, rest all are comments used for readability, explaning the code and testing code."""
# you can use # even for multiline comments and either way but ensure that will be not excuted by the python and just avoided.


#1.creating variables:(created as soon as a value is assigned to it)
a=5 #variable is created as value is assigned to it.
a #cannot leave a like that undefined bcoz python gives an error.
#now it's not a mandate to declare a value specifying its data type bcoz python already declares the data type to a value behind the screen, hiding the complexity or unnecassary details called abstraction: example
b=5 #int data type pre-stored  or automatically declared by python
c=2005 #again int data type
d="prasagna" #this is string data type.
print(b,c,d)
# but if you want to particularly specify the data type you can use cating method:example
e=int(5.0) #specifying the int data type, hence the output will be only 5
f=str(5) #output will be only string part "5.0"
g=float(5) #output will be 5.0 though five bcoz you have declared a variable using float.
print(e,f,g)
#now after doing all of these few doesn't know the data type of variable for that no problem you can even find the data type of variable using type() function
#example:
h=20
i="prasagna"
print(type(h)) 
print(type(i))
# single or double both give same output if you assign a string value to a variable example:
j="pras"
k='pras'
print(j,k) #both give same output hence you can use either of it.
#variable names in python are case-sensitive meaning, "Age" is different from "age" example:
Age=15
age=16
print(Age, age) #both are not same, hence no error and yes we are 5% on our wayy.

PYTHON STRINGS
1.print('Hey you"re awesome')
print("it's mine")
# you can assign multiple strings to one variable by using triple quotes example:
print(" hey hello there,this is sama prasagna reddy of grade 11th IBDP, studying in bengaluru")
# strings are arrays in python, there is no character in python even one characteri is simply a string of length 1 in python.
# looping through strings:
for s in "prasagna":# here s is a variable which continously changes as it goes through each letter in a string as long as it sees a letter or character.
    print(s,end="")
    # to find the length of a string we use len() function.
s="prasagna"
print(len(s))

#checking whether string is present or not and using if statements:
a="I love playing sports"
print("playing" in a ) # this returns true or false
print("like" not in a)# this returns true bcox there is no like in a
a="I love studying"
if "love" in a:
    print("yes love is present")# checking if string is there are not using if and then printing.
else:
        print("NO love is not present")
if "like" not in a:
    print("Yes like is not there")
else:
    print(" like is present")
2. SLICING STRINGS

